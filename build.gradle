plugins {
    id "com.diffplug.spotless"
    id "com.vanniktech.maven.publish"
    id "org.jetbrains.kotlin.jvm" apply false
}

apply from: 'gradle/spotless.gradle'

subprojects {
    group = "nl.littlerobots.vcu"

    afterEvaluate {
        tasks.named("compileKotlin") {
            kotlinOptions {
                jvmTarget = "1.8"
                languageVersion = "1.4"
            }
        }

        java {
            sourceCompatibility = JavaVersion.VERSION_1_8
            targetCompatibility = JavaVersion.VERSION_1_8
        }

        signing {
            def signingKey = findProperty("SIGNING_KEY")
            def signingPassword = findProperty("SIGNING_PASSWORD")
            def signingKeyId = findProperty("SIGNING_KEY_ID")
            if (signingKey != null && signingPassword != null && signingKeyId != null) {
                println("Using in memory signing key")
                useInMemoryPgpKeys(signingKeyId, signingKey, signingPassword)
            } else {
                useGpgCmd()
            }
        }
    }
}

tasks.register("publishSnapshot") {
    if (project.property("VERSION_NAME").endsWith("-SNAPSHOT")) {
        it.dependsOn ":plugin:publish"
    } else {
        doLast {
            println("Version ${project.property("VERSION_NAME")} is not a snapshot, skipping publish")
        }
    }
}

tasks.register("publishRelease") {
    if (!project.property("VERSION_NAME").endsWith("-SNAPSHOT")) {
        it.dependsOn ":plugin:publish", ":plugin:publishPlugins"
    } else {
        doLast {
            println("Version ${project.property("VERSION_NAME")} is not a release version, skipping publish")
        }
    }
}
